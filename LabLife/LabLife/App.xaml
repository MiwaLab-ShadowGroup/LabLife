<Application x:Class="LabLife.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:LabLife"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style TargetType="StatusBar">
            <Setter Property="Background" Value="#FF440000"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="White"></SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="SnapsToDevicePixels" 
          Value="True" />
            <Setter Property="OverridesDefaultStyle" 
          Value="True" />
            <Setter Property="Grid.IsSharedSizeScope" 
          Value="true" />
            <Setter Property="HasDropShadow" 
          Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border x:Name="Border" 
                Background="#33000000" 
                BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="White" />
                            </Border.BorderBrush>
                            <StackPanel IsItemsHost="True" 
                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" 
                   Value="true">
                                <Setter TargetName="Border" 
                    Property="Padding" 
                    Value="0,3,0,3" />
                                <Setter TargetName="Border" 
                    Property="CornerRadius" 
                    Value="2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="RadioButton">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="CaretBrush" Value="White"/>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="Transparent">

                    </SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="White"/>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="WindowButtonTemplate"  TargetType="Button">
            <Border CornerRadius="0" Padding="1" BorderThickness="0" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetName="border" 
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                To="#BF444444" Duration="0"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetName="border" 
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                To="#BF5555FF" Duration="0"/>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Border>
        </ControlTemplate>


        <ControlTemplate x:Key="ButtonTemplate"  TargetType="Button">
            <Border CornerRadius="0" Padding="1" BorderThickness="1" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetName="border" 
                                                 Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                 To="#BF3A3F3F" Duration="0"/>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Border>
        </ControlTemplate>
        <Style TargetType="ToolTip">
            <Setter Property="Background" Value="#22000000"/>
            <Setter Property="Foreground" Value="#CCFFFFFF"/>
        </Style>

        <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>


        <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>


        <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#AAA" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>


        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>


        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />


        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />


        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />


        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />


        <!-- Border Brushes -->

        <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#CCC" Offset="0.0"/>
                    <GradientStop Color="#444" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>


        <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#CCC" Offset="0.0"/>
                    <GradientStop Color="#444" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#777" Offset="0.0"/>
                    <GradientStop Color="#000" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>


        <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#444" Offset="0.0"/>
                    <GradientStop Color="#888" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>


        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />


        <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />


        <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />


        <!-- Miscellaneous Brushes -->
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />


        <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />





        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" 
       TargetType="Separator">
            <Setter Property="Height" Value="1"/>
            <Setter Property="Margin" Value="0,4,0,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator">
                        <Border BorderBrush="{StaticResource SolidBorderBrush}" 
                BorderThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TopLevelHeader -->
        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" 
                 TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <ContentPresenter  
        Margin="6,3,6,3"  
        ContentSource="Header" 
        RecognizesAccessKey="True" />
                    <Popup  
        Name="Popup" 
        Placement="Bottom" 
        IsOpen="{TemplateBinding IsSubmenuOpen}" 
        AllowsTransparency="True"  
        Focusable="False" 
        PopupAnimation="Fade">
                        <Border  
          Name="SubmenuBorder" 
          SnapsToDevicePixels="True" 
          Background="#55000000" 
          BorderBrush="#50FFFFFF" 
          BorderThickness="1" >
                            <StackPanel   
            IsItemsHost="True"  
            KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" 
              Value="#55000000"/>
                    <Setter TargetName="Border" Property="BorderBrush" 
              Value="Transparent"/>
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,0,0"/>
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,0"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- TopLevelItem -->


        <ControlTemplate  
  x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"  
  TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <ContentPresenter  
        Margin="6,3,6,3"  
        ContentSource="Header" 
        RecognizesAccessKey="True" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" 
              Value="#55000000"/>
                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" 
              Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <!-- SubmenuItem -->


        <ControlTemplate  
  x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"  
  TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="13"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter  
        Name="Icon" 
        Margin="6,0,6,0" 
        VerticalAlignment="Center" 
        ContentSource="Icon"/>
                    <Border  
        Name="Check"   
        Width="13" Height="13"  
        Visibility="Collapsed" 
        Margin="6,0,6,0"  
        Background="{StaticResource NormalBrush}" 
        BorderThickness="1" 
        BorderBrush="{StaticResource NormalBorderBrush}">
                        <Path  
          Name="CheckMark" 
          Width="7" Height="7"  
          Visibility="Hidden"  
          SnapsToDevicePixels="False"  
          Stroke="{StaticResource GlyphBrush}" 
          StrokeThickness="2" 
          Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                    </Border>
                    <ContentPresenter  
        Name="HeaderHost" 
        Grid.Column="1" 
        ContentSource="Header" 
        RecognizesAccessKey="True"/>
                    <TextBlock x:Name="InputGestureText" 
        Grid.Column="2" 
        Text="{TemplateBinding InputGestureText}" 
        Margin="5,2,0,2" 
        DockPanel.Dock="Right" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsCheckable" Value="true">
                    <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" 
              Value="#88000000"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <!-- SubmenuHeader -->


        <ControlTemplate  
  x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"  
  TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="13"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter  
        Name="Icon" 
        Margin="6,0,6,0" 
        VerticalAlignment="Center" 
        ContentSource="Icon"/>
                    <ContentPresenter  
        Name="HeaderHost" 
        Grid.Column="1" 
        ContentSource="Header" 
        RecognizesAccessKey="True"/>
                    <TextBlock x:Name="InputGestureText" 
        Grid.Column="2" 
        Text="{TemplateBinding InputGestureText}" 
        Margin="5,2,2,2" 
        DockPanel.Dock="Right"/>
                    <Path  
        Grid.Column="3" 
        HorizontalAlignment="Center" 
        VerticalAlignment="Center" 
        Data="M 0 0 L 0 7 L 4 3.5 Z"  
        Fill="{StaticResource GlyphBrush}" />
                    <Popup  
        Name="Popup" 
        Placement="Right" 
        HorizontalOffset="-4"  
        IsOpen="{TemplateBinding IsSubmenuOpen}" 
        AllowsTransparency="True"  
        Focusable="False" 
        PopupAnimation="Fade">
                        <Border  
          Name="SubmenuBorder" 
          SnapsToDevicePixels="True" 
          Background="#00000000" 
          BorderBrush="{StaticResource SolidBorderBrush}" 
          BorderThickness="1" >
                            <StackPanel   
            IsItemsHost="True"  
            KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" 
              Value="{StaticResource SelectedBackgroundBrush}"/>
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4"/>
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <!-- MenuItem Style -->


        <Style x:Key="{x:Type MenuItem}" TargetType="MenuItem">
            <Setter Property="Background" Value="{StaticResource MainColor}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Template" 
             Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                    <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Template" 
             Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Template" 
             Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="Template" 
             Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>






        <Style  TargetType="{x:Type TabControl}">
            <Setter Property="OverridesDefaultStyle" 
         Value="True" />
            <Setter Property="SnapsToDevicePixels" 
         Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid KeyboardNavigation.TabNavigation="Local">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" 
                                               Storyboard.TargetProperty="(Border.BorderBrush). 
                   (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" 
                                        Value="#FFFFFFFF" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <TabPanel x:Name="HeaderPanel" 
                   Grid.Row="0" 
                   Panel.ZIndex="1" 
                   Margin="0,0,4,-1" 
                   IsItemsHost="True" 
                   KeyboardNavigation.TabIndex="1" 
                   Background="Transparent" />
                            <Border x:Name="Border" 
                 Grid.Row="1" 
                 BorderThickness="0" 
                 CornerRadius="2" 
                 KeyboardNavigation.TabNavigation="Local" 
                 KeyboardNavigation.DirectionalNavigation="Contained" 
                 KeyboardNavigation.TabIndex="2" Background="{x:Null}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="White"/>
                                </Border.BorderBrush>
                                <ContentPresenter x:Name="PART_SelectedContentHost" 
                             Margin="4" 
                             ContentSource="SelectedContent" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style TargetType="{x:Type Button}">
            <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
            <Setter Property="Background" Value="#01000000"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#77FFFFFF"/>
        </Style>
        <Style TargetType="Separator">
            <Setter Property="Background" Value="#FFBDBDBD"/>
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="Root">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" 
                                               Storyboard.TargetProperty="(Panel.Background). 
                   (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" 
                                        Value="#CC999999" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" 
                                                   Storyboard.TargetName="Border">
                                                <EasingThicknessKeyFrame KeyTime="0" 
                                            Value="1,1,1,0" />
                                            </ThicknessAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" 
                                               Storyboard.TargetProperty="(Panel.Background). 
                   (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" 
                                        Value="Yellow" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" 
                                               Storyboard.TargetProperty="(Border.BorderBrush). 
                   (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" 
                                        Value="Black"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" 
                 Margin="0,0,-4,0" 
                 BorderThickness="1,1,1,1" 
                 CornerRadius="2" Background="#00000000">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="#00000000"/>
                                </Border.BorderBrush>
                                <ContentPresenter x:Name="ContentSite" 
                             VerticalAlignment="Center" 
                             HorizontalAlignment="Center" 
                             ContentSource="Header" 
                             Margin="12,2,12,2" 
                             RecognizesAccessKey="True" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" 
                  Value="True">
                                <Setter Property="Panel.ZIndex" 
                   Value="100" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <Style TargetType="ListBox">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush/>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="White"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="Transparent"/>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="MainColor" Color="#FF202020" />

        <Style TargetType="Menu">
            <Setter Property="Background" Value="{StaticResource MainColor}"/>
        </Style>


        <Style TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="Border" 
               Padding="2" 
               SnapsToDevicePixels="true">
                            <Border.Background>
                                <SolidColorBrush Color="Transparent" />
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" 
                                               Storyboard.TargetProperty="(Panel.Background). 
                   (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#77770000"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" 
                                               Storyboard.TargetProperty="(Panel.Background). 
                   (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#77777777"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="WindowButtonStyle">
            <Setter Property="Background" Value="#01000000"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#77FFFFFF"/>
            <Setter Property="Template" Value="{DynamicResource WindowButtonTemplate}"/>
        </Style>

        <Style TargetType="Button" x:Key="WindowButtonCheckOnStyle">
            <Setter Property="Background" Value="#77FFFFFF"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#77FFFFFF"/>
            <Setter Property="Template" Value="{DynamicResource WindowButtonTemplate}"/>
        </Style>
        <Style TargetType="Button" x:Key="WindowButtonCheckOffStyle">
            <Setter Property="Background" Value="#01000000"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#77FFFFFF"/>
            <Setter Property="Template" Value="{DynamicResource WindowButtonTemplate}"/>
        </Style>

        <Style TargetType="{x:Type Border}" x:Key="Border_Default">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#3FFFFFFF"></SolidColorBrush>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Window" x:Key="WindowStyle">
            <Setter Property="AllowsTransparency" Value="true"/>
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="Background" Value="#FF171717"/>
            <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        </Style>



        <!-- treeview-->
        <Style TargetType="TreeView">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
        </Style>
        <Style TargetType="TreeViewItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
        </Style>

        <!--Scrollbar-->
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="Border" BorderBrush="Transparent" Background="Transparent" BorderThickness="0">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="White" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="Black" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center"
                Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" >
                                <Path.Fill>
                                    <SolidColorBrush Color="#7FFFFFFF"/>
                                </Path.Fill>
                            </Path>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton"
       TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable"  Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" BorderThickness="0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb"
       TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="VerticalScrollBar"
                 TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18" />
                    <RowDefinition Height="0.00001*" />
                    <RowDefinition MaxHeight="18" />
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3"
            Background="#40FFFFFF" BorderThickness="0"/>
                <RepeatButton Grid.Row="0"
                  Style="{StaticResource ScrollBarLineButton}"
                  Height="18"
                  Command="ScrollBar.LineUpCommand"
                  Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track x:Name="PART_Track"
           Grid.Row="1"
           IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}"
               Margin="3,0,3,0">
                            <Thumb.BorderBrush>
                                <SolidColorBrush Color="Transparent"/>
                            </Thumb.BorderBrush>
                            <Thumb.Background>
                                <SolidColorBrush Color="#7FFFFFFF"/>
                            </Thumb.Background>
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3"
                  Style="{StaticResource ScrollBarLineButton}"
                  Height="18"
                  Command="ScrollBar.LineDownCommand"
                  Content="M 0 0 L 4 4 L 8 0 Z" />
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar"
                 TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18" />
                    <ColumnDefinition Width="0.00001*" />
                    <ColumnDefinition MaxWidth="18" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3"
            Background="#40FFFFFF" BorderThickness="0"/>
                <RepeatButton Grid.Column="0"
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="18"
                  Command="ScrollBar.LineLeftCommand"
                  Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track x:Name="PART_Track"
           Grid.Column="1"
           IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}"
               Margin="0,3,0,3">
                            <Thumb.BorderBrush>
                                <SolidColorBrush Color="Transparent"/>
                            </Thumb.BorderBrush>
                            <Thumb.Background>
                                <SolidColorBrush Color="#7FFFFFFF"/>
                            </Thumb.Background>
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="3"
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="18"
                  Command="ScrollBar.LineRightCommand"
                  Content="M 0 0 L 4 4 L 0 8 Z" />
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}"
       TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels"
          Value="True" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation"
             Value="Horizontal">
                    <Setter Property="Width"
              Value="Auto" />
                    <Setter Property="Height"
              Value="18" />
                    <Setter Property="Template"
              Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation"
             Value="Vertical">
                    <Setter Property="Width"
              Value="18" />
                    <Setter Property="Height"
              Value="Auto" />
                    <Setter Property="Template"
              Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <!-- groupBox-->
        <Style TargetType="GroupBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupBox">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0"
                  BorderThickness="1"
                  CornerRadius="0">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{StaticResource BorderMediumColor}" />
                                </Border.BorderBrush>

                                <Border.Background>
                                    <SolidColorBrush Color="Transparent"></SolidColorBrush>
                                </Border.Background>

                                <ContentPresenter Margin="4"
                              ContentSource="Header"
                              RecognizesAccessKey="True" />
                            </Border>

                            <Border Grid.Row="1"
                  BorderThickness="1,0,1,1"
                  CornerRadius="0">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{StaticResource BorderMediumColor}" />
                                </Border.BorderBrush>
                                <Border.Background>
                                    <SolidColorBrush Color="Transparent"></SolidColorBrush>
                                </Border.Background>
                                <ContentPresenter Margin="4" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--Slider-->


        <Style x:Key="SliderButtonStyle"
       TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="IsTabStop"
          Value="false" />
            <Setter Property="Focusable"
          Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumbStyle"
       TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="Height"
          Value="20" />
            <Setter Property="Width"
          Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle x:Name="Ellipse"
                 StrokeThickness="1" Stroke="#99FFFFFF" Fill="#3FFFFFFF">
                        </Rectangle>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Template when the orientation of the Slider is Horizontal.-->
        <ControlTemplate x:Key="HorizontalSlider"
                 TargetType="{x:Type Slider}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto"
                     MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick"
             SnapsToDevicePixels="True"
             Placement="Top"
             Height="4"
             Visibility="Collapsed">
                    <TickBar.Fill>
                        <SolidColorBrush Color="#FF444444" />
                    </TickBar.Fill>
                </TickBar>
                <Border x:Name="TrackBackground"
            Margin="4"
            CornerRadius="0"
            Height="8"
            Grid.Row="1"
            BorderThickness="1" Background="#FF303030" BorderBrush="#3FFFFFFF"/>
                <!---->
                <Track Grid.Row="1"
           x:Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                      Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                      Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar x:Name="BottomTick"
             SnapsToDevicePixels="True"
             Grid.Row="2"
             Fill="{TemplateBinding Foreground}"
             Placement="Bottom"
             Height="4"
             Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement"
             Value="TopLeft">
                    <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
             Value="BottomRight">
                    <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
             Value="Both">
                    <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                    <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--Template when the orientation of the Slider is Vertical.-->
                <ControlTemplate x:Key="VerticalSlider"
                 TargetType="{x:Type Slider}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto"
                        MinWidth="{TemplateBinding MinWidth}" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TickBar x:Name="TopTick"
             SnapsToDevicePixels="True"
             Placement="Left"
             Width="4"
             Visibility="Collapsed">
                            <TickBar.Fill>
                                <SolidColorBrush Color="#55555555" />
                            </TickBar.Fill>
                        </TickBar>

                        <Border x:Name="TrackBackground"
            Margin="0"
            CornerRadius="2"
            Width="4"
            Grid.Column="1"
            BorderThickness="1" Background="White" BorderBrush="#FF4D4D4D"/>
                        <Track Grid.Column="1"
           x:Name="PART_Track">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource SliderButtonStyle}"
                      Command="Slider.DecreaseLarge" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource SliderThumbStyle}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource SliderButtonStyle}"
                      Command="Slider.IncreaseLarge" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                        <TickBar x:Name="BottomTick"
             SnapsToDevicePixels="True"
             Grid.Column="2"
             Fill="{TemplateBinding Foreground}"
             Placement="Right"
             Width="4"
             Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement"
             Value="TopLeft">
                            <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                        </Trigger>
                        <Trigger Property="TickPlacement"
             Value="BottomRight">
                            <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
                        </Trigger>
                        <Trigger Property="TickPlacement"
             Value="Both">
                            <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                            <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

                <Style TargetType="{x:Type Slider}">
                    <Setter Property="SnapsToDevicePixels"
          Value="true" />
                    <Setter Property="OverridesDefaultStyle"
          Value="true" />
                    <Style.Triggers>
                        <Trigger Property="Orientation"
             Value="Horizontal">
                            <Setter Property="MinWidth"
              Value="20" />
                            <Setter Property="MinHeight"
              Value="20" />
                            <Setter Property="Template"
              Value="{StaticResource HorizontalSlider}" />
                        </Trigger>
                        <Trigger Property="Orientation"
             Value="Vertical">
                            <Setter Property="MinWidth"
              Value="20" />
                            <Setter Property="MinHeight"
              Value="20" />
                            <Setter Property="Template"
              Value="{StaticResource VerticalSlider}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>



                <!--Control colors.-->
                <Color x:Key="WindowColor">#FFE8EDF9</Color>
                <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
                <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

                <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
                <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
                <Color x:Key="DisabledForegroundColor">#FF888888</Color>

                <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
                <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

                <Color x:Key="ControlLightColor">White</Color>
                <Color x:Key="ControlMediumColor">#FF7381F9</Color>
                <Color x:Key="ControlDarkColor">#FF211AA9</Color>

                <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
                <Color x:Key="ControlPressedColor">#FF211AA9</Color>


                <Color x:Key="GlyphColor">#FF444444</Color>
                <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

                <!--Border colors-->
                <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
                <Color x:Key="BorderMediumColor">#FF888888</Color>
                <Color x:Key="BorderDarkColor">#FF444444</Color>

                <Color x:Key="PressedBorderLightColor">#FF888888</Color>
                <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

                <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
                <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

                <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

                <!--Control-specific resources.-->
                <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
                <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
                <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

                <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

                <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
                    <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
                    <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
                </LinearGradientBrush>

                <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="#000000FF"
                    Offset="0" />
                            <GradientStop Color="#600000FF"
                    Offset="0.4" />
                            <GradientStop Color="#600000FF"
                    Offset="0.6" />
                            <GradientStop Color="#000000FF"
                    Offset="1" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
        
                <ControlTemplate TargetType="Thumb" x:Key="ThumbEllipseTemplate">
                    <Ellipse Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" StrokeThickness="1">
                    </Ellipse>
                </ControlTemplate>
    </Application.Resources>
</Application>
    