<Application x:Class="LabLife.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:LabLife"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="White"></SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="SnapsToDevicePixels" 
          Value="True" />
            <Setter Property="OverridesDefaultStyle" 
          Value="True" />
            <Setter Property="Grid.IsSharedSizeScope" 
          Value="true" />
            <Setter Property="HasDropShadow" 
          Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border x:Name="Border" 
                Background="#33000000" 
                BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="White" />
                            </Border.BorderBrush>
                            <StackPanel IsItemsHost="True" 
                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" 
                   Value="true">
                                <Setter TargetName="Border" 
                    Property="Padding" 
                    Value="0,3,0,3" />
                                <Setter TargetName="Border" 
                    Property="CornerRadius" 
                    Value="2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="RadioButton">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="Transparent">

                    </SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="White"/>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="WindowButtonTemplate"  TargetType="Button">
            <Border CornerRadius="0" Padding="1" BorderThickness="0" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetName="border" 
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                To="#BF444444" Duration="0"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetName="border" 
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                To="#BF5555FF" Duration="0"/>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Border>
        </ControlTemplate>

        <ControlTemplate x:Key="ButtonTemplate"  TargetType="Button">
            <Border CornerRadius="0" Padding="1" BorderThickness="1" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetName="border" 
                                                 Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                 To="#BF3A3F3F" Duration="0"/>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Border>
        </ControlTemplate>
        <Style TargetType="ToolTip">
            <Setter Property="Background" Value="#22000000"/>
            <Setter Property="Foreground" Value="#CCFFFFFF"/>
        </Style>

        <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>


        <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>


        <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#AAA" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>


        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>


        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />


        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />


        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />


        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />


        <!-- Border Brushes -->

        <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#CCC" Offset="0.0"/>
                    <GradientStop Color="#444" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>


        <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#CCC" Offset="0.0"/>
                    <GradientStop Color="#444" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#777" Offset="0.0"/>
                    <GradientStop Color="#000" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>


        <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#444" Offset="0.0"/>
                    <GradientStop Color="#888" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>


        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />


        <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />


        <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />


        <!-- Miscellaneous Brushes -->
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />


        <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />





        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" 
       TargetType="Separator">
            <Setter Property="Height" Value="1"/>
            <Setter Property="Margin" Value="0,4,0,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator">
                        <Border BorderBrush="{StaticResource SolidBorderBrush}" 
                BorderThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TopLevelHeader -->
        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" 
                 TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <ContentPresenter  
        Margin="6,3,6,3"  
        ContentSource="Header" 
        RecognizesAccessKey="True" />
                    <Popup  
        Name="Popup" 
        Placement="Bottom" 
        IsOpen="{TemplateBinding IsSubmenuOpen}" 
        AllowsTransparency="True"  
        Focusable="False" 
        PopupAnimation="Fade">
                        <Border  
          Name="SubmenuBorder" 
          SnapsToDevicePixels="True" 
          Background="#55000000" 
          BorderBrush="#FFFFFFFF" 
          BorderThickness="1" >
                            <StackPanel   
            IsItemsHost="True"  
            KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" 
              Value="#55000000"/>
                    <Setter TargetName="Border" Property="BorderBrush" 
              Value="Transparent"/>
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,0,0"/>
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,0"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- TopLevelItem -->


        <ControlTemplate  
  x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"  
  TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <ContentPresenter  
        Margin="6,3,6,3"  
        ContentSource="Header" 
        RecognizesAccessKey="True" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" 
              Value="#55000000"/>
                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" 
              Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <!-- SubmenuItem -->


        <ControlTemplate  
  x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"  
  TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="13"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter  
        Name="Icon" 
        Margin="6,0,6,0" 
        VerticalAlignment="Center" 
        ContentSource="Icon"/>
                    <Border  
        Name="Check"   
        Width="13" Height="13"  
        Visibility="Collapsed" 
        Margin="6,0,6,0"  
        Background="{StaticResource NormalBrush}" 
        BorderThickness="1" 
        BorderBrush="{StaticResource NormalBorderBrush}">
                        <Path  
          Name="CheckMark" 
          Width="7" Height="7"  
          Visibility="Hidden"  
          SnapsToDevicePixels="False"  
          Stroke="{StaticResource GlyphBrush}" 
          StrokeThickness="2" 
          Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                    </Border>
                    <ContentPresenter  
        Name="HeaderHost" 
        Grid.Column="1" 
        ContentSource="Header" 
        RecognizesAccessKey="True"/>
                    <TextBlock x:Name="InputGestureText" 
        Grid.Column="2" 
        Text="{TemplateBinding InputGestureText}" 
        Margin="5,2,0,2" 
        DockPanel.Dock="Right" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsCheckable" Value="true">
                    <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" 
              Value="#88000000"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <!-- SubmenuHeader -->


        <ControlTemplate  
  x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"  
  TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="13"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter  
        Name="Icon" 
        Margin="6,0,6,0" 
        VerticalAlignment="Center" 
        ContentSource="Icon"/>
                    <ContentPresenter  
        Name="HeaderHost" 
        Grid.Column="1" 
        ContentSource="Header" 
        RecognizesAccessKey="True"/>
                    <TextBlock x:Name="InputGestureText" 
        Grid.Column="2" 
        Text="{TemplateBinding InputGestureText}" 
        Margin="5,2,2,2" 
        DockPanel.Dock="Right"/>
                    <Path  
        Grid.Column="3" 
        HorizontalAlignment="Center" 
        VerticalAlignment="Center" 
        Data="M 0 0 L 0 7 L 4 3.5 Z"  
        Fill="{StaticResource GlyphBrush}" />
                    <Popup  
        Name="Popup" 
        Placement="Right" 
        HorizontalOffset="-4"  
        IsOpen="{TemplateBinding IsSubmenuOpen}" 
        AllowsTransparency="True"  
        Focusable="False" 
        PopupAnimation="Fade">
                        <Border  
          Name="SubmenuBorder" 
          SnapsToDevicePixels="True" 
          Background="#00000000" 
          BorderBrush="{StaticResource SolidBorderBrush}" 
          BorderThickness="1" >
                            <StackPanel   
            IsItemsHost="True"  
            KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" 
              Value="{StaticResource SelectedBackgroundBrush}"/>
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4"/>
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <!-- MenuItem Style -->


        <Style x:Key="{x:Type MenuItem}" TargetType="MenuItem">
            <Setter Property="Background" Value="{StaticResource MainColor}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Template" 
             Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                    <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Template" 
             Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Template" 
             Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="Template" 
             Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>






        <Style  TargetType="{x:Type TabControl}">
            <Setter Property="OverridesDefaultStyle" 
         Value="True" />
            <Setter Property="SnapsToDevicePixels" 
         Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid KeyboardNavigation.TabNavigation="Local">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" 
                                               Storyboard.TargetProperty="(Border.BorderBrush). 
                   (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" 
                                        Value="#FFFFFFFF" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <TabPanel x:Name="HeaderPanel" 
                   Grid.Row="0" 
                   Panel.ZIndex="1" 
                   Margin="0,0,4,-1" 
                   IsItemsHost="True" 
                   KeyboardNavigation.TabIndex="1" 
                   Background="Transparent" />
                            <Border x:Name="Border" 
                 Grid.Row="1" 
                 BorderThickness="0" 
                 CornerRadius="2" 
                 KeyboardNavigation.TabNavigation="Local" 
                 KeyboardNavigation.DirectionalNavigation="Contained" 
                 KeyboardNavigation.TabIndex="2" Background="{x:Null}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="White"/>
                                </Border.BorderBrush>
                                <ContentPresenter x:Name="PART_SelectedContentHost" 
                             Margin="4" 
                             ContentSource="SelectedContent" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style TargetType="{x:Type Button}">
            <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
            <Setter Property="Background" Value="#01000000"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#77FFFFFF"/>
        </Style>
        <Style TargetType="Separator">
            <Setter Property="Background" Value="#FFBDBDBD"/>
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="Root">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" 
                                               Storyboard.TargetProperty="(Panel.Background). 
                   (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" 
                                        Value="#CC999999" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" 
                                                   Storyboard.TargetName="Border">
                                                <EasingThicknessKeyFrame KeyTime="0" 
                                            Value="1,1,1,0" />
                                            </ThicknessAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" 
                                               Storyboard.TargetProperty="(Panel.Background). 
                   (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" 
                                        Value="Yellow" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" 
                                               Storyboard.TargetProperty="(Border.BorderBrush). 
                   (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" 
                                        Value="Black"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" 
                 Margin="0,0,-4,0" 
                 BorderThickness="1,1,1,1" 
                 CornerRadius="2" Background="#00000000">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="#00000000"/>
                                </Border.BorderBrush>
                                <ContentPresenter x:Name="ContentSite" 
                             VerticalAlignment="Center" 
                             HorizontalAlignment="Center" 
                             ContentSource="Header" 
                             Margin="12,2,12,2" 
                             RecognizesAccessKey="True" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" 
                  Value="True">
                                <Setter Property="Panel.ZIndex" 
                   Value="100" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <Style TargetType="ListBox">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush/>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="White"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="Transparent"/>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="MainColor" Color="#FF202020" />

        <Style TargetType="Menu">
            <Setter Property="Background" Value="{StaticResource MainColor}"/>
        </Style>


        <Style TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="Border" 
               Padding="2" 
               SnapsToDevicePixels="true">
                            <Border.Background>
                                <SolidColorBrush Color="Transparent" />
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" 
                                               Storyboard.TargetProperty="(Panel.Background). 
                   (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#77770000"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" 
                                               Storyboard.TargetProperty="(Panel.Background). 
                   (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#77777777"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
